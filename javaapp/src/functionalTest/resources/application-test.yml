spring:
  application:
    name: tokugawa-discord-game-functional-tests
    
  profiles:
    active: test
    
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: sa
    password: password
    
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 25
          order_inserts: true
          order_updates: true
        cache:
          use_second_level_cache: false
          
  data:
    jpa:
      repositories:
        enabled: true
        
  web:
    locale: pt_BR
    resources:
      add-mappings: false
      
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false
      
  test:
    database:
      replace: none

# Configurações específicas para testes
discord:
  token: test-token-for-functional-tests
  api:
    base-url: http://localhost:8089
    timeout: 5000
  bot:
    enabled: false
    
server:
  port: 0  # porta aleatória para evitar conflitos
  servlet:
    context-path: /
    
management:
  endpoints:
    enabled-by-default: false
    
logging:
  level:
    org.springframework: WARN
    io.github.disparter.tokugawa: DEBUG
    org.testcontainers: WARN
    com.github.tomakehurst.wiremock: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%logger{36}] - %msg%n"
    
# Configurações do Testcontainers
testcontainers:
  reuse:
    enable: true
  ryuk:
    disabled: false
    
# Configurações do WireMock
wiremock:
  server:
    port: 8089
    files: src/functionalTest/resources/wiremock/__files
    verbose: true
    global-response-templating: true
    
# Configurações de cache para testes
cache:
  caffeine:
    spec: maximumSize=100,expireAfterWrite=5m
    
# Configurações de retry e timeout para testes
functional-test:
  timeout:
    default: 30s
    long: 60s
    short: 10s
  retry:
    max-attempts: 3
    delay: 1s
  wiremock:
    reset-after-each-test: true
    verify-requests: true

h2:
  console:
    enabled: false
    
sql:
  init:
    mode: never